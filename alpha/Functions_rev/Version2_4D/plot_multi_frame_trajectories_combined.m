%% plot_multi_frame_trajectories_combined: Plots all ankle trajectories on a single figure.
%
% Credits:
%   (Generated by Gemini)
%
% Description:
%   This function visualizes the output of calculate_frames_of_reference.m.
%   It creates a single figure, plotting both right and left ankle trajectories.
%   It uses line style to differentiate the frame of reference (FR1, FR2, FR3)
%   and color to differentiate the ankle (right vs. left).
%
% Input:
%   multi_frame_kinematics - struct: The parent struct from calculate_frames_of_reference.

function plot_multi_frame_trajectories_combined(multi_frame_kinematics)
    fprintf('\n=== PLOTTING COMBINED MULTI-FRAME TRAJECTORIES ===\n');

    % Define line styles for each frame of reference
    line_styles = struct('FR1', '-', 'FR2', '--', 'FR3', ':');
    frames = {'FR1', 'FR2', 'FR3'};

    % Define colors for each ankle
    ankle_colors = struct('right', [0, 0.4470, 0.7410], ... % Blue
                          'left', [0.8500, 0.3250, 0.0980]);   % Red
    
    % Check for data
    if ~isfield(multi_frame_kinematics.FR1, 'right_leg_kinematics') || isempty(multi_frame_kinematics.FR1.right_leg_kinematics)
        fprintf('  No kinematics data found to plot.\n');
        return;
    end

    % Create the figure and axes
    figure('Name', 'Combined Multi-Frame Ankle Trajectories', 'Position', [100, 100, 1000, 800]);
    ax = gca;
    hold(ax, 'on');
    title(ax, 'All Ankle Trajectories (Combined Frames of Reference)');
    xlabel(ax, 'X Position (m)');
    ylabel(ax, 'Y Position (m)');
    grid(ax, 'on');
    axis(ax, 'equal');

    % Loop through each frame of reference to get the line style
    for f = 1:length(frames)
        frame_name = frames{f};
        linestyle = line_styles.(frame_name);
        kinematics_for_frame = multi_frame_kinematics.(frame_name).right_leg_kinematics;
        num_cycles = length(kinematics_for_frame);

        fprintf('  Plotting %d cycles for %s with style "%s"...\n', num_cycles, frame_name, linestyle);

        % Loop through each cycle and plot the trajectories
        for i = 1:num_cycles
            % Plot Right Ankle (e.g., in Blue)
            plot(ax, kinematics_for_frame(i).right_ankle_pos(1,:), kinematics_for_frame(i).right_ankle_pos(2,:), ...
                'LineStyle', linestyle, 'Color', ankle_colors.right);
            
            % Plot Left Ankle (e.g., in Red)
            plot(ax, kinematics_for_frame(i).left_ankle_pos(1,:), kinematics_for_frame(i).left_ankle_pos(2,:), ...
                'LineStyle', linestyle, 'Color', ankle_colors.left);
        end
    end

    % Create a composite legend
    h_dummy = gobjects(5, 1);
    h_dummy(1) = plot(ax, NaN, NaN, '-', 'Color', ankle_colors.right, 'LineWidth', 2);
    h_dummy(2) = plot(ax, NaN, NaN, '-', 'Color', ankle_colors.left, 'LineWidth', 2);
    h_dummy(3) = plot(ax, NaN, NaN, '-', 'Color', 'k', 'LineWidth', 1.5);
    h_dummy(4) = plot(ax, NaN, NaN, '--', 'Color', 'k', 'LineWidth', 1.5);
    h_dummy(5) = plot(ax, NaN, NaN, ':', 'Color', 'k', 'LineWidth', 1.5);
    
    legend_labels = {'Right Ankle', 'Left Ankle', 'FR1: Absolute', 'FR2: Right-Anchored', 'FR3: Left-Anchored'}; 
    legend(h_dummy, legend_labels, 'Location', 'best');

    hold(ax, 'off');
    
    fprintf('Combined multi-frame plotting complete!\n');
end
