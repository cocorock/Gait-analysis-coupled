%% save_multi_frame_kinematics: Saves the complete analysis data to a single .mat file.
% 
% Credits:
%   (Generated by Gemini)
% 
% Description:
%   This function takes the final multi-frame kinematics data along with all
%   relevant processing parameters and saves them into a single, hierarchically
%   structured .mat file. This format is optimized for easy conversion to JSON
%   or for loading into other analysis environments.
% 
% Input:
%   multi_frame_kinematics - struct: The main data struct with FR1, FR2, and FR3.
%   velocity_multiplier    - scalar: The velocity scaling factor used.
%   interp_length          - scalar: The number of points used for interpolation.
%   scaled_duration        - scalar: The new, scaled mean duration of a cycle.
%   original_mean_duration - scalar: The original, unscaled mean duration.
%   file_info              - struct: Contains information about the source files.
% 
% Output:
%   None. Saves one .mat file in the './Gait Data/4D/' directory.

function save_multi_frame_kinematics(multi_frame_kinematics, velocity_multiplier, interp_length, scaled_duration, original_mean_duration, file_info, bone_lengths)
    fprintf('\n=== SAVING FULL ANALYSIS EXPORT ===\n');

    output_dir = './Gait Data/4D/';
    if ~exist(output_dir, 'dir')
        mkdir(output_dir);
    end

    % Create a top-level struct to hold all data for export
    gait_analysis_export = struct();

    % 1. Add metadata and parameters
    gait_analysis_export.export_info = struct(...
        'description', 'Complete gait analysis export including multi-frame kinematics and parameters.', ...
        'creation_date', datestr(now, 'yyyy-mm-dd HH:MM:SS'), ...
        'source_files', {file_info.names} ...
    );

    gait_analysis_export.parameters = struct(...
        'velocity_multiplier', velocity_multiplier, ...
        'interpolation_points', interp_length, ...
        'original_mean_duration_s', original_mean_duration, ...
        'scaled_duration_s', scaled_duration, ...
        'bone_lengths_m', bone_lengths ...
    );

    % 2. Add the main kinematics data
    gait_analysis_export.kinematics_data = multi_frame_kinematics;
    
    % 3. Construct filename and save the entire parent struct
    subject_id = 'XX'; % Default
    if ~isempty(file_info.names)
        subject_id = file_info.names{1}(1:2);
    end
    output_base_name = sprintf('gait_analysis_export_subject%s', subject_id);
    output_filename = fullfile(output_dir, [output_base_name, '.mat']);

    try
        save(output_filename, 'gait_analysis_export');
        fprintf('  Successfully saved full analysis to %s\n', output_filename);
    catch ME
        fprintf('  ERROR: Could not save data to %s\n', output_filename);
        fprintf('  MATLAB error: %s\n', ME.message);
    end

    fprintf('Full analysis saving complete!\n');
end