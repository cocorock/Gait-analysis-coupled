%% plot_multi_frame_trajectories: Plots ankle trajectories from multiple frames of reference.
% 
% Credits:
%   (Generated by Gemini)
% 
% Description:
%   This function visualizes the output of calculate_frames_of_reference.m.
%   It creates a single figure with two subplots: one for the right ankle and
%   one for the left ankle. On each subplot, it overlays the XY position 
%   trajectories from all three frames of reference (FR1, FR2, FR3), 
%   using a different color for each frame.
% 
% Input:
%   multi_frame_kinematics - struct: The parent struct from calculate_frames_of_reference.

function plot_multi_frame_trajectories(multi_frame_kinematics)
    fprintf('\n=== PLOTTING MULTI-FRAME-OF-REFERENCE TRAJECTORIES ===\n');

    % Define colors for each frame of reference
    colors = struct('FR1', [0, 0.4470, 0.7410], ... % Blue
                    'FR2', [0.8500, 0.3250, 0.0980], ... % Red
                    'FR3', [0.4660, 0.6740, 0.1880]);   % Green
    
    frames = {'FR1', 'FR2', 'FR3'};
    
    % Since the V3 process only uses right-leg segmented data, we only need to
    % process the 'right_leg_kinematics' field.
    if ~isfield(multi_frame_kinematics.FR1, 'right_leg_kinematics') || isempty(multi_frame_kinematics.FR1.right_leg_kinematics)
        fprintf('  No kinematics data found to plot.\n');
        return;
    end

    % Create the figure and axes
    figure('Name', 'Multi-Frame Ankle Trajectories', 'Position', [100, 100, 1400, 700]);
    ax_right = subplot(1, 2, 1);
    hold(ax_right, 'on');
    title(ax_right, 'Right Ankle Trajectories');
    xlabel(ax_right, 'X Position (m)');
    ylabel(ax_right, 'Y Position (m)');
    grid(ax_right, 'on');
    axis(ax_right, 'equal');

    ax_left = subplot(1, 2, 2);
    hold(ax_left, 'on');
    title(ax_left, 'Left Ankle Trajectories');
    xlabel(ax_left, 'X Position (m)');
    ylabel(ax_left, 'Y Position (m)');
    grid(ax_left, 'on');
    axis(ax_left, 'equal');

    % Loop through each frame of reference
    for f = 1:length(frames)
        frame_name = frames{f};
        kinematics_for_frame = multi_frame_kinematics.(frame_name).right_leg_kinematics;
        color = colors.(frame_name);
        num_cycles = length(kinematics_for_frame);

        fprintf('  Plotting %d cycles for %s...\n', num_cycles, frame_name);

        % Loop through each cycle and plot the trajectories
        for i = 1:num_cycles
            % Plot Right Ankle on the right subplot
            plot(ax_right, kinematics_for_frame(i).right_ankle_pos(1,:), kinematics_for_frame(i).right_ankle_pos(2,:), 'Color', color);
            
            % Plot Left Ankle on the left subplot
            plot(ax_left, kinematics_for_frame(i).left_ankle_pos(1,:), kinematics_for_frame(i).left_ankle_pos(2,:), 'Color', color);
        end
    end

    % Create a legend for both subplots
    legend_labels = {'FR1: Absolute', 'FR2: Right-Ankle Anchored', 'FR3: Left-Ankle Anchored'};
    
    % Right subplot legend
    h_right = gobjects(length(frames), 1);
    for f = 1:length(frames)
        h_right(f) = plot(ax_right, NaN, NaN, 'Color', colors.(frames{f}), 'LineWidth', 2);
    end
    legend(ax_right, h_right, legend_labels, 'Location', 'best');

    % Left subplot legend
    h_left = gobjects(length(frames), 1);
    for f = 1:length(frames)
        h_left(f) = plot(ax_left, NaN, NaN, 'Color', colors.(frames{f}), 'LineWidth', 2);
    end
    legend(ax_left, h_left, legend_labels, 'Location', 'best');

    hold(ax_right, 'off');
    hold(ax_left, 'off');
    
    fprintf('Multi-frame plotting complete!\n');
end
